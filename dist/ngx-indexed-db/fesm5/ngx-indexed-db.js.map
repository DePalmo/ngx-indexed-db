{"version":3,"file":"ngx-indexed-db.js","sources":["ng://ngx-indexed-db/lib/ngx-indexed-db.ts"],"sourcesContent":["export class NgxIndexedDB {\r\n\tutils: Utils;\r\n\tdbWrapper: DbWrapper;\r\n\r\n\tconstructor(dbName: string, version: number) {\r\n\t\tthis.utils = new Utils();\r\n\t\tthis.dbWrapper = new DbWrapper(dbName, version);\r\n\t}\r\n\r\n\topenDatabase(version: number, upgradeCallback?: Function) {\r\n\t\treturn new Promise<any>((resolve, reject) => {\r\n\t\t\tthis.dbWrapper.dbVersion = version;\r\n\t\t\tlet request = this.utils.indexedDB.open(this.dbWrapper.dbName, version);\r\n\t\t\trequest.onsuccess = () => {\r\n\t\t\t\tthis.dbWrapper.db = request.result;\r\n\t\t\t\tresolve();\r\n\t\t\t};\r\n\r\n\t\t\trequest.onerror = e => {\r\n\t\t\t\treject(\r\n\t\t\t\t\t'IndexedDB error: ' + (<any>e.target).errorCode\r\n\t\t\t\t\t\t? (<any>e.target).errorCode + ' (' + (<any>e.target).error + ')'\r\n\t\t\t\t\t\t: (<any>e.target).errorCode\r\n\t\t\t\t);\r\n\t\t\t};\r\n\r\n\t\t\tif (typeof upgradeCallback === 'function') {\r\n\t\t\t\trequest.onupgradeneeded = e => {\r\n\t\t\t\t\tupgradeCallback(e, this.dbWrapper.db);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tgetByKey(storeName: string, key: any) {\r\n\t\treturn new Promise<any>((resolve, reject) => {\r\n\t\t\tthis.dbWrapper.validateBeforeTransaction(storeName, reject);\r\n\r\n\t\t\tlet transaction = this.dbWrapper.createTransaction(\r\n\t\t\t\t\tthis.dbWrapper.optionsGenerator(DBMode.readonly, storeName, reject, resolve)\r\n\t\t\t\t),\r\n\t\t\t\tobjectStore = transaction.objectStore(storeName),\r\n\t\t\t\trequest: IDBRequest;\r\n\r\n\t\t\trequest = objectStore.get(key);\r\n\t\t\trequest.onsuccess = function(event: Event) {\r\n\t\t\t\tresolve((<any>event.target).result);\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\tgetAll(storeName: string, keyRange?: IDBKeyRange, indexDetails?: IndexDetails) {\r\n\t\treturn new Promise<any>((resolve, reject) => {\r\n\t\t\tthis.dbWrapper.validateBeforeTransaction(storeName, reject);\r\n\r\n\t\t\tlet transaction = this.dbWrapper.createTransaction(\r\n\t\t\t\t\tthis.dbWrapper.optionsGenerator(DBMode.readonly, storeName, reject, resolve)\r\n\t\t\t\t),\r\n\t\t\t\tobjectStore = transaction.objectStore(storeName),\r\n\t\t\t\tresult: Array<any> = [],\r\n\t\t\t\trequest: IDBRequest;\r\n\t\t\tif (indexDetails) {\r\n\t\t\t\tlet index = objectStore.index(indexDetails.indexName),\r\n\t\t\t\t\torder = indexDetails.order === 'desc' ? 'prev' : 'next';\r\n\t\t\t\trequest = index.openCursor(keyRange, <IDBCursorDirection>order);\r\n\t\t\t} else {\r\n\t\t\t\trequest = objectStore.openCursor(keyRange);\r\n\t\t\t}\r\n\r\n\t\t\trequest.onerror = function(e) {\r\n\t\t\t\treject(e);\r\n\t\t\t};\r\n\r\n\t\t\trequest.onsuccess = function(evt: Event) {\r\n\t\t\t\tlet cursor = (<IDBOpenDBRequest>evt.target).result;\r\n\t\t\t\tif (cursor) {\r\n\t\t\t\t\tresult.push(cursor['value']);\r\n\t\t\t\t\tcursor['continue']();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresolve(result);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\tgetAllFast(storeName: string, keyRange?: IDBKeyRange, count?: number) {\r\n\t\treturn new Promise<any>((resolve, reject) => {\r\n\t\t\tthis.dbWrapper.validateBeforeTransaction(storeName, reject);\r\n\r\n\t\t\tlet transaction = this.dbWrapper.createTransaction(\r\n\t\t\t\tthis.dbWrapper.optionsGenerator(DBMode.readonly, storeName, reject, resolve)\r\n\t\t\t\t),\r\n\t\t\t\tobjectStore = transaction.objectStore(storeName),\r\n\t\t\t\trequest: IDBRequest;\r\n\r\n\t\t\trequest = objectStore.getAll(keyRange, count);\r\n\r\n\t\t\trequest.onerror = (e) => reject(e);\r\n\t\t\trequest.onsuccess = (e) => resolve((<any>e.target).result);\r\n\t\t});\r\n\t}\r\n\r\n\tadd(storeName: string, value: any, key?: any) {\r\n\t\treturn new Promise<any>((resolve, reject) => {\r\n\t\t\tthis.dbWrapper.validateBeforeTransaction(storeName, reject);\r\n\t\t\tlet transaction = this.dbWrapper.createTransaction(\r\n\t\t\t\t\tthis.dbWrapper.optionsGenerator(DBMode.readwrite, storeName, reject, resolve)\r\n\t\t\t\t),\r\n\t\t\t\tobjectStore = transaction.objectStore(storeName);\r\n\r\n\t\t\tlet request = objectStore.add(value, key);\r\n\t\t\trequest.onsuccess = (evt: any) => {\r\n\t\t\t\tkey = evt.target.result;\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\tcount(storeName: string, keyRange?: IDBValidKey | IDBKeyRange) {\r\n\t\treturn new Promise<any>((resolve, reject) => {\r\n\t\t\tthis.dbWrapper.validateBeforeTransaction(storeName, reject);\r\n\r\n\t\t\tlet transaction = this.dbWrapper.createTransaction(\r\n\t\t\t\tthis.dbWrapper.optionsGenerator(DBMode.readonly, storeName, reject, resolve)\r\n\t\t\t\t),\r\n\t\t\t\tobjectStore = transaction.objectStore(storeName),\r\n\t\t\t\trequest: IDBRequest;\r\n\r\n\t\t\trequest = objectStore.count(keyRange);\r\n\r\n\t\t\trequest.onerror = (e) => reject(e);\r\n\t\t\trequest.onsuccess = (e) => resolve((<any>e.target).result);\r\n\t\t});\r\n\t}\r\n\r\n\tupdate(storeName: string, value: any, key?: any) {\r\n\t\treturn new Promise<any>((resolve, reject) => {\r\n\t\t\tthis.dbWrapper.validateBeforeTransaction(storeName, reject);\r\n\r\n\t\t\tlet transaction = this.dbWrapper.createTransaction(\r\n\t\t\t\t\tthis.dbWrapper.optionsGenerator(DBMode.readwrite, storeName, reject, resolve)\r\n\t\t\t\t),\r\n\t\t\t\tobjectStore = transaction.objectStore(storeName);\r\n\r\n\t\t\tobjectStore.put(value, key);\r\n\t\t});\r\n\t}\r\n\r\n\tupdateBulk(storeName: string, values: Array<any>, key?: any) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis.dbWrapper.validateBeforeTransaction(storeName, reject);\r\n\r\n\t\t\tlet transaction = this.dbWrapper.createTransaction(\r\n\t\t\t\tthis.dbWrapper.optionsGenerator(DBMode.readwrite, storeName, reject, resolve)\r\n\t\t\t),\r\n\t\t\t\tobjectStore = transaction.objectStore(storeName);\r\n\r\n\t\t\tvalues.forEach(value => {\r\n\t\t\t\tobjectStore.put(value, key);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tdelete(storeName: string, key: any) {\r\n\t\treturn new Promise<any>((resolve, reject) => {\r\n\t\t\tthis.dbWrapper.validateBeforeTransaction(storeName, reject);\r\n\r\n\t\t\tlet transaction = this.dbWrapper.createTransaction(\r\n\t\t\t\t\tthis.dbWrapper.optionsGenerator(DBMode.readwrite, storeName, reject, resolve)\r\n\t\t\t\t),\r\n\t\t\t\tobjectStore = transaction.objectStore(storeName);\r\n\r\n\t\t\tobjectStore.delete(key);\r\n\t\t});\r\n\t}\r\n\r\n\tdeleteBulk(storeName: string, keys: Array<any>) {\r\n\t\treturn new Promise<any>((resolve, reject) => {\r\n\t\t\tthis.dbWrapper.validateBeforeTransaction(storeName, reject);\r\n\r\n\t\t\tlet transaction = this.dbWrapper.createTransaction(\r\n\t\t\t\tthis.dbWrapper.optionsGenerator(DBMode.readwrite, storeName, reject, resolve)\r\n\t\t\t\t),\r\n\t\t\t\tobjectStore = transaction.objectStore(storeName);\r\n\r\n\t\t\tkeys.forEach(key => {\r\n\t\t\t\tobjectStore.delete(key);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tdeleteDatabase() {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis.dbWrapper.db.close();\r\n\t\t\tconst deleteDBRequest = this.utils.indexedDB.deleteDatabase(this.dbWrapper.dbName);\r\n\t\t\tdeleteDBRequest.onsuccess = resolve;\r\n\t\t\tdeleteDBRequest.onerror = reject;\r\n\t\t\tdeleteDBRequest.onblocked = () => {\r\n\t\t\t\tthrow new Error('Unable to delete database because it\\'s blocked');\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\topenCursor(storeName: string, cursorCallback: (evt: Event) => void, keyRange?: IDBKeyRange) {\r\n\t\treturn new Promise<any>((resolve, reject) => {\r\n\t\t\tthis.dbWrapper.validateBeforeTransaction(storeName, reject);\r\n\t\t\tlet transaction = this.dbWrapper.createTransaction(\r\n\t\t\t\t\tthis.dbWrapper.optionsGenerator(DBMode.readonly, storeName, reject, resolve)\r\n\t\t\t\t),\r\n\t\t\t\tobjectStore = transaction.objectStore(storeName),\r\n\t\t\t\trequest = objectStore.openCursor(keyRange);\r\n\r\n\t\t\trequest.onsuccess = (evt: Event) => {\r\n\t\t\t\tcursorCallback(evt);\r\n\t\t\t\tresolve();\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\topenCursorWithIndex(storeName: string, indexName: string, cursorCallback: (evt: Event) => void, keyRange?: IDBKeyRange) {\r\n\t\treturn new Promise<any>((resolve, reject) => {\r\n\t\t\tthis.dbWrapper.validateBeforeTransaction(storeName, reject);\r\n\t\t\tlet transaction = this.dbWrapper.createTransaction(\r\n\t\t\t\tthis.dbWrapper.optionsGenerator(DBMode.readonly, storeName, reject, resolve)\r\n\t\t\t\t),\r\n\t\t\t\tobjectStore = transaction.objectStore(storeName),\r\n\t\t\t\tindex = objectStore.index(indexName),\r\n\t\t\t\trequest = index.openCursor(keyRange);\r\n\r\n\t\t\trequest.onsuccess = (evt: Event) => {\r\n\t\t\t\tcursorCallback(evt);\r\n\t\t\t\tresolve();\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\tclear(storeName: string) {\r\n\t\treturn new Promise<any>((resolve, reject) => {\r\n\t\t\tthis.dbWrapper.validateBeforeTransaction(storeName, reject);\r\n\t\t\tlet transaction = this.dbWrapper.createTransaction(\r\n\t\t\t\t\tthis.dbWrapper.optionsGenerator(DBMode.readwrite, storeName, reject, resolve)\r\n\t\t\t\t),\r\n\t\t\t\tobjectStore = transaction.objectStore(storeName);\r\n\t\t\tobjectStore.clear();\r\n\t\t\tresolve();\r\n\t\t});\r\n\t}\r\n\r\n\tgetByIndex(storeName: string, indexName: string, key: any) {\r\n\t\treturn new Promise<any>((resolve, reject) => {\r\n\t\t\tthis.dbWrapper.validateBeforeTransaction(storeName, reject);\r\n\t\t\tlet transaction = this.dbWrapper.createTransaction(\r\n\t\t\t\t\tthis.dbWrapper.optionsGenerator(DBMode.readonly, storeName, reject, resolve)\r\n\t\t\t\t),\r\n\t\t\t\tobjectStore = transaction.objectStore(storeName),\r\n\t\t\t\tindex = objectStore.index(indexName),\r\n\t\t\t\trequest = index.get(key);\r\n\t\t\trequest.onsuccess = event => {\r\n\t\t\t\tresolve((<IDBOpenDBRequest>event.target).result);\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport class Utils {\r\n\tindexedDB: IDBFactory;\r\n\r\n\tconstructor() {\r\n\t\tthis.indexedDB =\r\n\t\t\twindow.indexedDB ||\r\n\t\t\t(<any>window).mozIndexedDB ||\r\n\t\t\t(<any>window).webkitIndexedDB ||\r\n\t\t\t(<any>window).msIndexedDB;\r\n\t}\r\n}\r\n\r\nexport interface IndexDetails {\r\n\tindexName: string;\r\n\torder: string;\r\n}\r\n\r\nexport class DbWrapper {\r\n\tdbName: string;\r\n\tdbVersion: number;\r\n\tdb: IDBDatabase;\r\n\r\n\tconstructor(dbName: string, version: number) {\r\n\t\tthis.dbName = dbName;\r\n\t\tthis.dbVersion = version || 1;\r\n\t}\r\n\r\n\tvalidateStoreName(storeName: string) {\r\n\t\treturn this.db.objectStoreNames.contains(storeName);\r\n\t}\r\n\r\n\tvalidateBeforeTransaction(storeName: string, reject: Function) {\r\n\t\tif (!this.db) {\r\n\t\t\treject('You need to use the openDatabase function to create a database before you query it!');\r\n\t\t}\r\n\t\tif (!this.validateStoreName(storeName)) {\r\n\t\t\treject('objectStore does not exists: ' + storeName);\r\n\t\t}\r\n\t}\r\n\r\n\tcreateTransaction(options: Options): IDBTransaction {\r\n\t\tlet trans: IDBTransaction = this.db.transaction(options.storeName, options.dbMode);\r\n\t\ttrans.onerror = options.error;\r\n\t\ttrans.oncomplete = options.complete;\r\n\t\ttrans.onabort = options.abort;\r\n\t\treturn trans;\r\n\t}\r\n\r\n\toptionsGenerator(type: any, storeName: any, reject: Function, resolve: Function): Options {\r\n\t\treturn {\r\n\t\t\tstoreName: storeName,\r\n\t\t\tdbMode: type,\r\n\t\t\terror: (e: Event) => {\r\n\t\t\t\treject(e);\r\n\t\t\t},\r\n\t\t\tcomplete: (e: Event) => {\r\n\t\t\t\tresolve();\r\n\t\t\t},\r\n\t\t\tabort: (e: Event) => {\r\n\t\t\t\treject(e);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport interface Options {\r\n\tstoreName: string;\r\n\tdbMode: IDBTransactionMode;\r\n\terror: (e: Event) => any;\r\n\tcomplete: (e: Event) => any;\r\n\tabort?: any;\r\n}\r\n\r\nexport enum DBMode {\r\n\treadonly = 'readonly',\r\n\treadwrite = 'readwrite'\r\n}\r\n"],"names":[],"mappings":"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"}